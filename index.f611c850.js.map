{"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAC5C,MAAMC,EAAiBF,SAASG,iBAAiB,aAEjD,SAASC,EAAoBC,GAC3B,MAAMC,EAAOD,EAAGE,wBAChB,OACED,EAAKE,KAAO,GACZF,EAAKG,MAAQ,GACbH,EAAKE,MACFE,OAAOC,aAAeX,SAASY,gBAAgBC,eAClDP,EAAKQ,QAAUJ,OAAOK,YAAcf,SAASY,gBAAgBI,Y,EAIjE,SAASC,IACPf,EAAegB,SAAQ,SAAUC,GAC3Bf,EAAoBe,IACtBA,EAAcC,UAAUC,IAAI,U,IAIhCrB,SAASsB,oBAAoB,SAAUL,E,CAIzCA,GAGAjB,SAASC,iBAAiB,UAAU,WAClCC,EAAegB,SAAQ,SAAUC,GAC3Bf,EAAoBe,IACtBA,EAAcC,UAAUC,IAAI,U,WAQtB,CACZhB,GAAIL,SAASuB,cAAc,WAC3BC,WAAW,EACXC,OACMC,KAAKrB,GAAGe,UAAUO,SAAS,gBAC7BD,KAAKrB,GAAGe,UAAUQ,OAAO,c,EAG7BC,OACOH,KAAKrB,GAAGe,UAAUO,SAAS,gBAC9BD,KAAKrB,GAAGe,UAAUC,IAAI,c,EAG1BpB,mBACES,OAAOT,iBAAiB,UAAU,KAChC,MAAM6B,EAAUpB,OAAOoB,SAAW9B,SAASY,gBAAgBmB,UACvDL,KAAKF,WAAaM,EAAU,IAGhCJ,KAAKF,WAAY,EAEbM,EAAU,IACZJ,KAAKD,OAELC,KAAKG,OAAM,IAIf7B,SAASuB,cAAc,WAAWS,QAAU,KAC1CN,KAAKF,WAAY,EACjBE,KAAKG,OAELnB,OAAOuB,SAAS,CACdzB,IAAK,EACLC,KAAM,EACNyB,SAAU,UACV,C,IAKajC,mBAErBD,SAASC,iBAAiB,oBAAoB,WAClBD,SAASG,iBAAiB,oBAElCe,SAAQ,SAAUiB,GAClCA,EAAQlC,iBAAiB,SAAS,YAMpC,SAAyBmC,GACvB,MAAMC,EAAWrC,SAASsC,cAAc,YACxCD,EAASE,MAAQH,EACjBpC,SAASwC,KAAKC,YAAYJ,GAC1BA,EAASK,SACT1C,SAAS2C,YAAY,QACrB3C,SAASwC,KAAKI,YAAYP,E,CAXxBQ,CAAgBV,EAAQW,WAc5B,SAA2BX,GACzB,MAAMY,EAAiB/C,SAASsC,cAAc,QAC9CS,EAAeD,UAAY,uBACRC,EAAJC,UAAY,uBAE3Bb,EAAQM,YAAYM,GAGmCE,YAA5C,WACTF,EAAeG,MAAMC,QAAU,G,GAC9B,IAGmEF,YAA3D,WACTF,EAAeG,MAAMC,QAAU,IAGOF,YAA3B,WACTd,EAAQS,YAAYG,E,GACnB,I,GACF,I,CAjCDK,CAAkBjB,E","sources":["src/index.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n  const animatedBlocks = document.querySelectorAll('.animated');\n\n  function isElementInViewport(el) {\n    const rect = el.getBoundingClientRect();\n    return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.top <=\n        (window.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n  }\n\n  function handleInitialScroll() {\n    animatedBlocks.forEach(function (animatedBlock) {\n      if (isElementInViewport(animatedBlock)) {\n        animatedBlock.classList.add('animate');\n      }\n    });\n    // Remove the scroll event listener after the initial check\n    document.removeEventListener('scroll', handleInitialScroll);\n  }\n\n  // Add the initial check for elements in viewport\n  handleInitialScroll();\n\n  // Add the scroll event listener for future checks\n  document.addEventListener('scroll', function () {\n    animatedBlocks.forEach(function (animatedBlock) {\n      if (isElementInViewport(animatedBlock)) {\n        animatedBlock.classList.add('animate');\n      }\n    });\n  });\n});\n\n// add up button\n\nconst btnUp = {\n  el: document.querySelector('.btn-up'),\n  scrolling: false,\n  show() {\n    if (this.el.classList.contains('btn-up_hide')) {\n      this.el.classList.remove('btn-up_hide');\n    }\n  },\n  hide() {\n    if (!this.el.classList.contains('btn-up_hide')) {\n      this.el.classList.add('btn-up_hide');\n    }\n  },\n  addEventListener() {\n    window.addEventListener('scroll', () => {\n      const scrollY = window.scrollY || document.documentElement.scrollTop;\n      if (this.scrolling && scrollY > 0) {\n        return;\n      }\n      this.scrolling = false;\n\n      if (scrollY > 300) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    });\n\n    document.querySelector('.btn-up').onclick = () => {\n      this.scrolling = true;\n      this.hide();\n\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    };\n  },\n};\n\nconst result = btnUp.addEventListener();\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const promocodeElements = document.querySelectorAll('.info__promocode');\n\n  promocodeElements.forEach(function (element) {\n    element.addEventListener('click', function () {\n      copyToClipboard(element.innerText);\n      showCopiedMessage(element);\n    });\n  });\n\n  function copyToClipboard(text) {\n    const textarea = document.createElement('textarea');\n    textarea.value = text;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n  }\n\n  function showCopiedMessage(element) {\n    const messageElement = document.createElement('span');\n    messageElement.innerText = 'Промокод скопійовано';\n    messageElement.className = 'info__copied-message';\n\n    element.appendChild(messageElement);\n\n    // Затримка, щоб транзити застосовувалися після вставки елемента в DOM\n    setTimeout(function () {\n      messageElement.style.opacity = '1';\n    }, 10);\n\n    // Затримка перед видаленням елемента (задача видалення тепер враховує час анімації)\n    setTimeout(function () {\n      messageElement.style.opacity = '0';\n\n      // Затримка перед видаленням елемента (це вже не setTimeout)\n      setTimeout(function () {\n        element.removeChild(messageElement);\n      }, 300); // Через 0.3 секунди прибрати повідомлення (це час анімації)\n    }, 2000); // Через 2 секунди прибрати повідомлення\n  }\n});\n\n// (() => {\n//   const refs = {\n//     openModalBtn: document.querySelector('[data-modal-open]'),\n//     closeModalBtn: document.querySelector('[data-modal-close]'),\n//     modal: document.querySelector('[data-modal]'),\n//     backdrop: document.querySelector('.backdrop'),\n//   };\n\n//   refs.openModalBtn.addEventListener('click', toggleModal);\n//   refs.closeModalBtn.addEventListener('click', toggleModal);\n//   refs.backdrop.addEventListener('click', toggleModal);\n\n//   function toggleModal() {\n//     refs.modal.classList.toggle('is-hidden');\n//     document.body.classList.toggle('modal-open');\n//   }\n// })();\n\n// (() => {\n//   const refs = {\n//     openModalBtn: document.querySelector('[data-modal-open]'),\n//     closeModalBtn: document.querySelector('[data-modal-close]'),\n//     modal: document.querySelector('[data-modal]'),\n//     backdrop: document.querySelector('.backdrop'),\n//   };\n\n//   refs.openModalBtn.addEventListener('click', toggleModal);\n//   refs.closeModalBtn.addEventListener('click', toggleModal);\n//   refs.backdrop.addEventListener('click', handleBackdropClick);\n//   refs.modal.addEventListener('click', handleModalClick);\n\n//   function toggleModal() {\n//     refs.modal.classList.toggle('is-hidden');\n//     document.body.classList.toggle('modal-open');\n//   }\n\n//   function handleBackdropClick(event) {\n//     if (event.target === event.currentTarget) {\n//       toggleModal();\n//     }\n//   }\n\n//   function handleModalClick(event) {\n//     event.stopPropagation(); // Зупинка подальшого розповсюдження події\n//   }\n// })();\n"],"names":["document","addEventListener","animatedBlocks","querySelectorAll","isElementInViewport","el","rect","getBoundingClientRect","top","left","window","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","handleInitialScroll","forEach","animatedBlock","classList","add","removeEventListener","querySelector","scrolling","show","this","contains","remove","hide","scrollY","scrollTop","onclick","scrollTo","behavior","element","text","textarea","createElement","value","body","appendChild","select","execCommand","removeChild","copyToClipboard","innerText","messageElement","className","setTimeout","style","opacity","showCopiedMessage"],"version":3,"file":"index.f611c850.js.map"}